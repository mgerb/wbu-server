group(

    -key pair
    grKeys => int                       //store for group id's
    
    -key pair
    groupID => {groupName:id}            //takes in group name and returns group id
    
    -hash
    grHash:<groupID> => {               //group object that contains various information.. tbd
        groupname: string
        owner: userID
        maxmembers: int
        inviteOnly: bool
        password: hashed(string)
    }
    
    -hash
    grMem:<groupID> => [...{userID:username}]      //array of userID's
    
    -list of group messages 
    grMsg:<groupID> => [userID/fullName/time/message]  //list of messages for each group
    
    -geoset of group locations - sorted set
    grGeo:<groupID>, long, lat [userID/userName/timestamp]
    
    -hash set of locations for group members - one per user
    grLoc:<groupID> => [{userID:geoHash/timestamp}]
)

user(
    
    uKeys => int                      //store for user id's
    
    --hash of user emails to id
    userID => {email: id}             //userID is a email:id hash map
    
    uHash:<userID> => {               //user object
        username: string
        password: hashed(password)
        email:    string
        adminGroupCount: string
        fcmToken: string
        facebookToken: string
    }
    
    -hash of user groups
    uGrps:<userID> => [...{groupID:groupName}]     //returns array of groupID's / groupNames
    
    -hash of user group invites
    uGrpInv:<userID> => [...{groupID:groupName}]   //contains set of group id's that user has pending invites to
    
    -set of user messages
    uGrpMsg:<userID>:<groupID> => [...{userID/fullName/timeStamp/message}]
)